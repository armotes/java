<#if  pack == "">
package com.pw.org.service.impl;

import com.pw.common.pojo.dto.org.${class}DTO;
import com.pw.org.entity.${class}DO;
import com.pw.org.mapper.${class}Mapper;
import com.pw.org.service.I${class}Service;
import com.pw.common.pojo.query.${projectName}.${class}Query;
<#else >
package com.pw.org.service.impl.${pack};

import com.pw.org.entity.${pack}.${class}DO;
import com.pw.org.mapper.${pack}.${class}Mapper;
import com.pw.org.service.${pack}.I${class}Service;
import com.pw.common.pojo.query.${projectName}.${class}Query;
</#if>
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import java.util.ArrayList;
import java.util.List;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageImpl;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;

/**
 * This code is generated by FreeMarker
 * @author luokai
 *
 */
@Slf4j
@Service
public class ${class}ServiceImpl implements I${class}Service {
	@Autowired
	private ${class}Mapper ${class?uncap_first}Mapper;
    /**
     * 新增${tableDesc}
     * @param ${class?uncap_first}
     * @return int
     */
    @Override
    public int insertData(${class}DTO ${class?uncap_first}){
        log.info("新增${class}DO,传入参数为:{}",${class?uncap_first});
        ${class}DO ${class?uncap_first}DO = new ${class}DO();
        if (${class?uncap_first} != null) {
            BeanUtils.copyProperties(${class?uncap_first}, ${class?uncap_first}DO);
            return	${class?uncap_first}Mapper.insertData(${class?uncap_first}DO);
        } else {
           return -1;
        }
    }
     /**
      * 删除${tableDesc}
      */
    @Override
    public int deleteById(<#list properties as property><#if  property.isKey == 1>${property.javaType} ${property.propertyName}</#if></#list>){
        log.info("通过ID删除${class}DO,传入参数为:{}",<#list properties as property><#if  property.isKey == 1>${property.propertyName}</#if></#list>);
        return ${class?uncap_first}Mapper.deleteById(<#list properties as property><#if  property.isKey == 1>${property.propertyName}</#if></#list>);
    }
    /**
      * 修改${tableDesc}
      */
    @Override
    public int updateData(${class}DTO ${class?uncap_first}){
        log.info("修改${class}DO,传入参数为:{}",${class?uncap_first});
        ${class}DO ${class?uncap_first}DO = new ${class}DO();
        if (${class?uncap_first} != null) {
            BeanUtils.copyProperties(${class?uncap_first}, ${class?uncap_first}DO);
            return ${class?uncap_first}Mapper.updateData(${class?uncap_first}DO);
        } else {
           return -1;
        }
    }
    /**
      * 查询${tableDesc}分页列表
      * @return Page<${class}>
      */
    @Override
    public Page<${class}DTO> getPageList(${class}Query query){
        log.info("查询${class}分页集合,传入参数为:{}",query);
        //分页信息,查询是以0开始，页面是以1开始
        Pageable pageable = PageRequest.of(query.getPage() - 1 , query.getLimit());
		List<${class}DO>${class?uncap_first}List = ${class?uncap_first}Mapper.getPageList(query, pageable);
        List<${class}DTO>${class?uncap_first}DTOList = new ArrayList<>();
        for (int i = 0; i < ${class?uncap_first}List.size(); i++) {
            ${class}DTO ${class?uncap_first}DTO = new ${class}DTO();
            BeanUtils.copyProperties(${class?uncap_first}List.get(i),${class?uncap_first}DTO);
        ${class?uncap_first}DTOList.add(${class?uncap_first}DTO);
        }
        long countData = ${class?uncap_first}Mapper.getListCount(query);
        return new PageImpl(${class?uncap_first}DTOList, pageable, countData);
    }
    /**
      * 查询${tableDesc}列表
      */
    @Override
    public List<${class}DTO> getList(${class}Query query){
        log.info("查询${class}list集合,传入参数为:{}",query);
        List<${class}DO>${class?uncap_first}List = ${class?uncap_first}Mapper.getList(query);
        List<${class}DTO>${class?uncap_first}DTOList = new ArrayList<>();
        for (int i = 0; i < ${class?uncap_first}List.size(); i++) {
            ${class}DTO ${class?uncap_first}DTO = new ${class}DTO();
            BeanUtils.copyProperties(${class?uncap_first}List.get(i),${class?uncap_first}DTO);
            ${class?uncap_first}DTOList.add(${class?uncap_first}DTO);
        }
    	return ${class?uncap_first}DTOList;
    }
    /**
      * 通过Id查询${tableDesc}
      */
    @Override
    public ${class}DTO getById(<#list properties as property><#if  property.isKey == 1>${property.javaType} ${property.propertyName}</#if></#list>){
        log.info("通过ID查询${class}DO对象,传入参数为:{}",<#list properties as property><#if  property.isKey == 1>${property.propertyName}</#if></#list>);
        ${class}DO ${class?uncap_first}DO = ${class?uncap_first}Mapper.getById(<#list properties as property><#if  property.isKey == 1>${property.propertyName}</#if></#list>);
        ${class}DTO ${class?uncap_first}DTO = new ${class}DTO();
        BeanUtils.copyProperties(${class?uncap_first}DO,${class?uncap_first}DTO);
        if (${class?uncap_first}DO != null) {
            BeanUtils.copyProperties(${class?uncap_first}DO, ${class?uncap_first}DTO);
        } else {
            ${class?uncap_first}DTO = null;
        }
        return ${class?uncap_first}DTO;
    }

}